angular.module('addTrainingApp').controller('loginCtrl',loginFnt);

loginFnt.$inject=['$scope','$log', '$window', 'add' ];

function loginFnt($scope, $log, $window){
       
	$scope.client_id = "";
	$scope.id = "";
	$scope.name = "";
	$scope.image_url = "";
	$scope.email = "";
	$scope.connected = false;
	
	$scope.onSignIn=function(googleUser){
		console.log("OnSignIn called");
	    // Useful data for your client-side scripts:
	    var profile = googleUser.getBasicProfile();
	    
	    console.log("ID: ", profile.getId()); // Don't send this directly to your server!
	    $scope.client_id = profile.getId();
	    $scope.updateId($scope.client_id);
	    
	    console.log("Name: ", profile.getName());
	    $scope.name =  profile.getName();
	    $scope.updateName($scope.name);
	    
	    console.log("Image URL: ", profile.getImageUrl());
	    $scope.image_url = profile.getImageUrl();
	    $scope.updateImUrl($scope.image_url);
	    
	    console.log("Email: ", profile.getEmail());
	    $scope.email = profile.getEmail();
	    $scope.updateEmail($scope.email);

	    // The ID token you need to pass to your backend:
	    var id_token = googleUser.getAuthResponse().id_token;
	    console.log("ID Token: ", id_token);
	    $scope.client_id = id_token;
	    $scope.updateConnected($scope.connected);
	    
	    var xhr = new XMLHttpRequest();
	    xhr.open('POST', '/validateToken');  // On invoque la méthode post de la servlet
	    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
	    xhr.onload = function() {
	      console.log('Signed in as: ', xhr.responseText);
	    };
	    xhr.send('idtoken=' + id_token);
	    
	    console.log("*********************************");
	    $scope.connected = true;
	    $scope.updateConnected($scope.connected);
	    console.log("Connected set to true");
	}
	
	  /**
	   * Handler for the signin callback triggered after the user selects an account.
	   */
	  $scope.onSignInCallback=function(resp){
	    gapi.client.load('plus', 'v1', apiClientLoaded);
	  }
	
	  /**
	   * Sets up an API call after the Google API client loads.
	   */
	  $scope.apiClientLoaded=function(){
	    gapi.client.plus.people.get({userId: 'me'}).execute(handleEmailResponse);
	  }
	
	  /**
	   * Response callback for when the API client receives a response.
	   *
	   * @param resp The API response object with the user email and profile information.
	   */
	  $scope.handleEmailResponse=function(resp){
	    var primaryEmail;
	    for (var i=0; i < resp.emails.length; i++) {
	      if (resp.emails[i].type === 'account') primaryEmail = resp.emails[i].value;
	    }
	    document.getElementById('responseContainer').value = 'Primary email: ' +
	        primaryEmail + '\n\nFull Response:\n' + JSON.stringify(resp);
	  }
	  
	  $scope.signOut=function(){
		    var auth2 = gapi.auth2.getAuthInstance();
		    auth2.signOut().then(function () {
		      console.log('User signed out.');
		    });
		    console.log("*********************************");
		    $scope.connected = false;
		    $scope.updateConnected($scope.connected);
		    console.log("Connected set to false");
	  }
}

/*
    $scope.currentPresenation=factory.presentationCreation("template_pres","description of the template présentation");
    
   //CREATE an object for interactions with ng-include controller
    $scope.contentMap={};
    $scope.contentMap.payload="";
    
    $scope.presentationMap={};
    $scope.presentationMap.payload="";
    
    var available_content=comm.loadImages('test','test');
       available_content.then(
          function(payload) { 
              $scope.contentMap.payload = payload;
              $scope.contentMap.array=factory.mapToArray(payload);
          },
          function(errorPayload) {
              $log.error('failure loading movie', errorPayload);
          });

*/